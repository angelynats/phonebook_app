{"version":3,"sources":["utils/validation.js","utils/transitions/fade.module.css","components/Contacts/ContactList/ContactList.module.css","components/Modal/Modal.module.css","components/Contacts/ContactEditor/ContactEditor.module.css","components/Contacts/Contact/Contact.module.css","components/Contacts/ContactFilter/ContactFilter.module.css","pages/ContactsPage/ContactsPage.module.css","redux/contact/contactsOperations.js","redux/contact/contactActions.js","redux/contact/contactsSelectors.js","components/Modal/Modal.js","components/Contacts/ContactEditor/ContactEditor.js","components/Contacts/Contact/Contact.js","components/Contacts/ContactList/ContactList.js","components/Contacts/ContactFilter/ContactFilter.js","pages/ContactsPage/ContactsPage.js"],"names":["rulesSignup","name","email","password","rulesLogin","rulesContact","number","messages","required","field","module","exports","fetchContacts","dispatch","type","Types","FETCH_CONTACTS_START","apiInstance","get","then","response","contacts","data","FETCH_CONTACTS_SUCCESS","payload","catch","error","FETCH_CONTACTS_ERROR","fetchContactsError","addContact","contact","ADD_CONTACT_START","post","ADD_CONTACT_SUCCESS","addContactSuccess","ADD_CONTACT_ERROR","addContactError","deleteContact","id","DELETE_CONTACT_START","delete","DELETE_CONTACT_SUCCESS","deleteContactSuccess","console","log","DELETE_CONTACT_ERROR","deleteContactError","editContact","EDIT_CONTACT_START","patch","EDIT_CONTACT_SUCCESS","editContactSuccess","EDIT_CONTACT_ERROR","editContactError","getContacts","state","items","getContactById","createSelector","find","getContactsWithFilter","filter","toLowerCase","includes","Modal","onClose","children","backdropRef","useRef","handleKeyPress","e","code","useEffect","window","addEventListener","removeEventListener","className","styles","overlay","ref","onClick","current","target","modal","button","svg_close","ContactEditor","title","titleButton","useState","setName","setNumber","errors","setErrors","useDispatch","onSubmit","preventDefault","validateAll","formatPhoneNumberIntl","contactsOperations","formattedErrors","forEach","message","form","noValidate","inputs","htmlFor","label","autoFocus","value","onChange","input","international","defaultCountry","buttons","button_submit","button_cancel","Contact","uniqueKey","isModalOpen","setIsModalOpen","onButtonClick","useSelector","contactsSelectors","contact_name","contact_number","button_edit","svg_edit","button_delete","svg_del","ContactList","list","setList","contactsWithFilter","CSSTransition","in","length","timeout","classNames","fadeTransition","unmountOnExit","onEnter","onExited","empty","empty_text","TransitionGroup","component","map","list_item","total","ContactFilter","setFilter","FILTER_CONTACT","contactActions","placeholder","ContactsPage","main","main_contacts","header","header_secondary","parameters","svg_add"],"mappings":"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","file":"static/js/contacts-page.322c3436.chunk.js","sourcesContent":["export const rulesSignup = {\r\n  name: 'required|string',\r\n  email: 'required|email',\r\n  password: 'required|string|min:6',\r\n};\r\n\r\nexport const rulesLogin = {\r\n  email: 'required|email',\r\n  password: 'required|string|min:6',\r\n};\r\n\r\nexport const rulesContact = {\r\n  name: 'required|string',\r\n  number: 'required|string|min:8',\r\n};\r\n\r\nexport const messages = {\r\n  required: field => `* ${field} is required`,\r\n  'email.email': '* please enter a valid email address',\r\n  'password.min': '* must be at least 6 characters long',\r\n  'number.min': '* must be at least 8 characters long',\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__1Mu_q\",\"enterActive\":\"fade_enterActive__2KpbA\",\"exit\":\"fade_exit__1-HAC\",\"exitActive\":\"fade_exitActive__2saVi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty\":\"ContactList_empty__yCYYN\",\"empty_text\":\"ContactList_empty_text__2_pZI\",\"list\":\"ContactList_list___vBKF\",\"list_item\":\"ContactList_list_item__2PZ3B\",\"total\":\"ContactList_total__2LHow\",\"example-appear\":\"ContactList_example-appear__1JwNp\",\"example-appear-active\":\"ContactList_example-appear-active__18ng0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__3M6qj\",\"modal\":\"Modal_modal__98ut1\",\"button\":\"Modal_button__33iBU\",\"svg_close\":\"Modal_svg_close__2hpRC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactEditor_title__1dCFA\",\"form\":\"ContactEditor_form__F_GZv\",\"inputs\":\"ContactEditor_inputs__2fSuY\",\"label\":\"ContactEditor_label__3Ei3J\",\"input\":\"ContactEditor_input__nRJoJ\",\"error\":\"ContactEditor_error__3msYJ\",\"buttons\":\"ContactEditor_buttons__1pHRt\",\"button_submit\":\"ContactEditor_button_submit__32W-u\",\"button_cancel\":\"ContactEditor_button_cancel__3WIFj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contact_contacts__1fZ9G\",\"contact_name\":\"Contact_contact_name__pKoGE\",\"contact_number\":\"Contact_contact_number__1Mj0Y\",\"buttons\":\"Contact_buttons__3bXQy\",\"button_delete\":\"Contact_button_delete__370Ms\",\"button_edit\":\"Contact_button_edit__1SSmb\",\"svg_del\":\"Contact_svg_del__291cx\",\"svg_edit\":\"Contact_svg_edit__txEzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactFilter_input__3iQR1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ContactsPage_main__2hIcL\",\"main_contacts\":\"ContactsPage_main_contacts__1WKHg\",\"header\":\"ContactsPage_header__2rn2S\",\"header_secondary\":\"ContactsPage_header_secondary__1KTJd\",\"parameters\":\"ContactsPage_parameters__1kxpW\",\"button\":\"ContactsPage_button__30XLk\",\"svg_add\":\"ContactsPage_svg_add__26zNW\"};","import apiInstance from '../../utils/apiInstance/apiInstance';\r\n\r\nimport {\r\n  fetchContactsStart,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactStart,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactStart,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  editContactStart,\r\n  editContactSuccess,\r\n  editContactError,\r\n} from './contactActions';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsStart());\r\n  apiInstance\r\n    .get('/contacts')\r\n    .then(response => {\r\n      dispatch(fetchContactsSuccess(response.data));\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchContactsError(error));\r\n    });\r\n};\r\n\r\nexport const addContact = contact => dispatch => {\r\n  dispatch(addContactStart());\r\n  apiInstance\r\n    .post('/contacts', contact)\r\n    .then(response => {\r\n      dispatch(addContactSuccess(response.data));\r\n    })\r\n    .catch(error => {\r\n      dispatch(addContactError(error));\r\n    });\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactStart());\r\n  apiInstance\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(deleteContactSuccess(id));\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      dispatch(deleteContactError(error));\r\n    });\r\n};\r\n\r\nexport const editContact = (id, contact) => dispatch => {\r\n  dispatch(editContactStart());\r\n  apiInstance\r\n    .patch(`/contacts/${id}`, contact)\r\n    .then(response => {\r\n      dispatch(editContactSuccess(response.data));\r\n    })\r\n    .catch(error => {\r\n      dispatch(editContactError(error));\r\n    });\r\n};\r\n","import Types from './Types';\r\n\r\n// FETCH\r\n\r\nexport const fetchContactsStart = () => ({\r\n  type: Types.FETCH_CONTACTS_START,\r\n});\r\n\r\nexport const fetchContactsSuccess = contacts => ({\r\n  type: Types.FETCH_CONTACTS_SUCCESS,\r\n  payload: {\r\n    contacts,\r\n  },\r\n});\r\n\r\nexport const fetchContactsError = error => ({\r\n  type: Types.FETCH_CONTACTS_ERROR,\r\n  payload: {\r\n    error,\r\n  },\r\n});\r\n\r\n// ADD\r\n\r\nexport const addContactStart = () => ({\r\n  type: Types.ADD_CONTACT_START,\r\n});\r\n\r\nexport const addContactSuccess = contact => ({\r\n  type: Types.ADD_CONTACT_SUCCESS,\r\n  payload: {\r\n    contact,\r\n  },\r\n});\r\n\r\nexport const addContactError = error => ({\r\n  type: Types.ADD_CONTACT_ERROR,\r\n  payload: {\r\n    error,\r\n  },\r\n});\r\n\r\n// DELETE\r\n\r\nexport const deleteContactStart = () => ({\r\n  type: Types.DELETE_CONTACT_START,\r\n});\r\n\r\nexport const deleteContactSuccess = id => ({\r\n  type: Types.DELETE_CONTACT_SUCCESS,\r\n  payload: {\r\n    id,\r\n  },\r\n});\r\n\r\nexport const deleteContactError = error => ({\r\n  type: Types.DELETE_CONTACT_ERROR,\r\n  payload: {\r\n    error,\r\n  },\r\n});\r\n\r\n// PATCH\r\n\r\nexport const editContactStart = () => ({\r\n  type: Types.EDIT_CONTACT_START,\r\n});\r\n\r\nexport const editContactSuccess = contact => ({\r\n  type: Types.EDIT_CONTACT_SUCCESS,\r\n  payload: {\r\n    contact,\r\n  },\r\n});\r\n\r\nexport const editContactError = error => ({\r\n  type: Types.EDIT_CONTACT_ERROR,\r\n  payload: {\r\n    error,\r\n  },\r\n});\r\n\r\n// FILTER\r\n\r\nexport const filterContacts = filter => ({\r\n  type: Types.FILTER_CONTACT,\r\n  payload: {\r\n    filter,\r\n  },\r\n});\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\n\r\nexport const getContactById = createSelector(\r\n  [(state, id) => id, getContacts],\r\n  (id, contacts) => contacts.find(contact => contact.id === id),\r\n);\r\n\r\nexport const getContactFilter = state => state.contacts.filter;\r\n\r\nexport const getContactsWithFilter = createSelector(\r\n  [getContacts, getContactFilter],\r\n  (contacts, filter) => {\r\n    if (filter !== '') {\r\n      return contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n      );\r\n    }\r\n    return contacts;\r\n  },\r\n);\r\n\r\nexport const getToken = state => state.session.token;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Modal.module.css';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst Modal = ({ onClose, children }) => {\r\n  const backdropRef = useRef(null);\r\n\r\n  const handleKeyPress = e => {\r\n    if (e.code !== 'Escape') return;\r\n    onClose();\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    if (backdropRef.current && e.target !== backdropRef.current) return;\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyPress);\r\n    return () => window.removeEventListener('keydown', handleKeyPress);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={styles.overlay}\r\n      ref={backdropRef}\r\n      onClick={handleBackdropClick}\r\n    >\r\n      <div className={styles.modal}>\r\n        <button type=\"button\" onClick={onClose} className={styles.button}>\r\n          <CloseIcon className={styles.svg_close}></CloseIcon>\r\n        </button>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  onClose: PropTypes.func,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { validateAll } from 'indicative/validator';\r\nimport { rulesContact, messages } from '../../../utils/validation';\r\nimport PhoneInput from 'react-phone-number-input';\r\nimport 'react-phone-number-input/style.css';\r\nimport { formatPhoneNumberIntl } from 'react-phone-number-input';\r\nimport * as contactsOperations from '../../../redux/contact/contactsOperations';\r\nimport styles from './ContactEditor.module.css';\r\n\r\nconst ContactEditor = ({ title, titleButton, contact, onClose }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (contact) {\r\n      setName(contact.name);\r\n      setNumber(contact.number);\r\n    }\r\n  }, [contact]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    validateAll({ name, number }, rulesContact, messages)\r\n      .then(data => {\r\n        data.number = formatPhoneNumberIntl(number);\r\n        if (contact) {\r\n          dispatch(contactsOperations.editContact(contact.id, data));\r\n        } else {\r\n          dispatch(contactsOperations.addContact(data));\r\n        }\r\n        onClose();\r\n      })\r\n      .catch(errors => {\r\n        const formattedErrors = {};\r\n        errors.forEach(error => (formattedErrors[error.field] = error.message));\r\n        setErrors(formattedErrors);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className={styles.title}>{title}</h1>\r\n      <form onSubmit={onSubmit} className={styles.form} noValidate>\r\n        <div className={styles.inputs}>\r\n          <label htmlFor=\"name\" className={styles.label}>\r\n            Name\r\n            <input\r\n              autoFocus\r\n              id=\"name\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n              className={styles.input}\r\n            />\r\n            {errors && <span className={styles.error}>{errors.name}</span>}\r\n          </label>\r\n          <label htmlFor=\"number\" className={styles.label}>\r\n            Number\r\n            <PhoneInput\r\n              international\r\n              defaultCountry=\"UA\"\r\n              id=\"number\"\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={setNumber}\r\n              className={styles.input}\r\n            />\r\n            {errors && <span className={styles.error}>{errors.number}</span>}\r\n          </label>\r\n\r\n          {/* <label htmlFor=\"number\" className={styles.label}>\r\n            Number\r\n            <input\r\n              id=\"number\"\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={onNumberChange}\r\n              className={styles.input}\r\n            />\r\n            {errors && <span className={styles.error}>{errors.number}</span>}\r\n          </label> */}\r\n        </div>\r\n        <div className={styles.buttons}>\r\n          <button type=\"submit\" className={styles.button_submit}>\r\n            {titleButton}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onClose}\r\n            className={styles.button_cancel}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactEditor;\r\n\r\nContactEditor.propTypes = {\r\n  onClose: PropTypes.func,\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  }),\r\n  title: PropTypes.string,\r\n  titleButton: PropTypes.string,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport * as contactsOperations from '../../../redux/contact/contactsOperations';\r\nimport * as contactsSelectors from '../../../redux/contact/contactsSelectors';\r\nimport Modal from '../../Modal/Modal';\r\nimport ContactEditor from '../ContactEditor/ContactEditor';\r\nimport styles from './Contact.module.css';\r\n\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n\r\nconst Contact = ({ uniqueKey }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const onButtonClick = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n\r\n  const contact = useSelector(state =>\r\n    contactsSelectors.getContactById(state, uniqueKey),\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => {\r\n    dispatch(contactsOperations.deleteContact(id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contact && (\r\n        <>\r\n          <div className={styles.contacts}>\r\n            <p className={styles.contact_name}>{contact.name}</p>\r\n            <p className={styles.contact_number}>{contact.number}</p>\r\n          </div>\r\n          <div className={styles.buttons}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={onButtonClick}\r\n              className={styles.button_edit}\r\n              title=\"Edit\"\r\n            >\r\n              <CreateIcon className={styles.svg_edit}></CreateIcon>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(contact.id)}\r\n              className={styles.button_delete}\r\n              title=\"Delete\"\r\n            >\r\n              <HighlightOffIcon className={styles.svg_del}></HighlightOffIcon>\r\n            </button>\r\n          </div>\r\n          {isModalOpen && (\r\n            <Modal onClose={onButtonClick}>\r\n              <ContactEditor\r\n                onClose={onButtonClick}\r\n                contact={contact}\r\n                titleButton=\"Edit\"\r\n                title=\"Edit contact\"\r\n              />\r\n            </Modal>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n  uniqueKey: PropTypes.string.isRequired,\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  }),\r\n  onButtonClick: PropTypes.func,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport fadeTransition from '../../../utils/transitions/fade.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport * as contactsOperations from '../../../redux/contact/contactsOperations';\r\nimport * as contactsSelectors from '../../../redux/contact/contactsSelectors';\r\nimport styles from './ContactList.module.css';\r\nimport Contact from '../Contact/Contact';\r\n\r\nconst ContactList = () => {\r\n  const [list, setList] = useState(true);\r\n\r\n  const contactsWithFilter = useSelector(state =>\r\n    contactsSelectors.getContactsWithFilter(state),\r\n  );\r\n\r\n  const contacts = useSelector(state => contactsSelectors.getContacts(state));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        in={contacts.length === 0}\r\n        key=\"123\"\r\n        timeout={200}\r\n        classNames={fadeTransition}\r\n        unmountOnExit\r\n        onEnter={() => setList(false)}\r\n        onExited={() => setList(true)}\r\n      >\r\n        <div className={styles.empty}>\r\n          <p className={styles.empty_text}>\r\n            Your contact list is empty! Please, add a new contact.\r\n          </p>\r\n        </div>\r\n      </CSSTransition>\r\n\r\n      {list && (\r\n        <>\r\n          <TransitionGroup component=\"ul\" className={styles.list}>\r\n            {contactsWithFilter.map(contact => (\r\n              <CSSTransition\r\n                key={contact.id}\r\n                timeout={200}\r\n                classNames={fadeTransition}\r\n                unmountOnExit\r\n              >\r\n                <li className={styles.list_item}>\r\n                  <Contact uniqueKey={contact.id} />\r\n                </li>\r\n              </CSSTransition>\r\n            ))}\r\n          </TransitionGroup>\r\n          <CSSTransition\r\n            in={contacts.length !== 0}\r\n            key=\"12345\"\r\n            timeout={200}\r\n            classNames={fadeTransition}\r\n            unmountOnExit\r\n          >\r\n            <p className={styles.total}>\r\n              Total contacts: {contactsWithFilter.length}\r\n            </p>\r\n          </CSSTransition>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\nimport * as contactActions from '../../../redux/contact/contactActions';\r\nimport styles from './ContactFilter.module.css';\r\n\r\nconst ContactFilter = () => {\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeFilter = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(contactActions.filterContacts(filter));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filter]);\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      id=\"input\"\r\n      value={filter}\r\n      onChange={onChangeFilter}\r\n      placeholder=\"Type to filter contacts...\"\r\n      className={styles.input}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ContactFilter;\r\n","import React, { useState } from 'react';\r\nimport ContactList from '../../components/Contacts/ContactList/ContactList';\r\nimport ContactEditor from '../../components/Contacts/ContactEditor/ContactEditor';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport ContactFilter from '../../components/Contacts/ContactFilter/ContactFilter';\r\nimport styles from './ContactsPage.module.css';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nconst ContactsPage = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const onButtonClick = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <div className={styles.main_contacts}>\r\n        <h1 className={styles.header}>Phonebook</h1>\r\n\r\n        <p className={styles.header_secondary}>My contact list</p>\r\n        <div className={styles.parameters}>\r\n          <ContactFilter />\r\n          <button\r\n            type=\"button\"\r\n            onClick={onButtonClick}\r\n            className={styles.button}\r\n            title=\"Add contact\"\r\n          >\r\n            <AddCircleOutlineIcon\r\n              className={styles.svg_add}\r\n            ></AddCircleOutlineIcon>\r\n          </button>\r\n        </div>\r\n        <ContactList />\r\n\r\n        {isModalOpen && (\r\n          <Modal onClose={onButtonClick} children>\r\n            <ContactEditor\r\n              titleButton=\"Add\"\r\n              title=\"Add a new contact\"\r\n              onClose={onButtonClick}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;\r\n"],"sourceRoot":""}